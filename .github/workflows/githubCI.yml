name: CI Workflow & Trigger Jenkins

on:
  push:
    branches:
      - master  # Trigger on push to the master branch
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  build:
    runs-on: self-hosted  # Uses a self-hosted runner

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the project with Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests  # Skip tests for faster build

      # Step 5: Verify the WAR file exists
      - name: Check if WAR file exists
        run: ls -l /home/gowtham/actions-runner/_work/SLCICDProject/SLCICDProject/target/

      # Step 6: Copy the WAR file to the desired location
      - name: Copy WAR file to /home/gowtham/warfilepath
        run: |
          mkdir -p /home/gowtham/warfilepath
          cp /home/gowtham/actions-runner/_work/SLCICDProject/SLCICDProject/target/*.war /home/gowtham/warfilepath/
          ls -l /home/gowtham/warfilepath/

      # Step 7: Upload the WAR file as an artifact (optional)
      - name: Upload WAR file
        uses: actions/upload-artifact@v4
        with:
          name: war-file
          path: /home/gowtham/warfilepath/*.war

  trigger-jenkins:
    needs: build  # Runs only after the build job is successful
    runs-on: ubuntu-latest  # Uses a GitHub-hosted runner
    
    steps:
      - name: Trigger Jenkins Pipeline
        run: |
          # Fetch Jenkins Crumb Token for CSRF protection
          CRUMB=$(curl -s -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" "https://6cd7-49-206-62-19.ngrok-free.app/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)")
          
          # Trigger the Jenkins job
          curl -X POST "https://6e92-124-123-167-208.ngrok-free.app/job/myfirstpipeline/build" \
               -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }}" \
               -H "$CRUMB"


